package com.example.speedtest

//states model 
class UiState(
    val speed: String = "",
    val ping: String = "-",
    val maxSpeed: String = "-",
    val arcValue: Float = 0f,
    val inProgress: Boolean = false
)
/*
Этот код на языке Kotlin определяет класс с именем `UiState`, который представляет модель состояния (state model) для некоторого приложения,
связанного с тестированием скорости (например, интернет-скорости). Вот что представляют собой его свойства:
1. `val speed: String = ""`: Это свойство `speed` представляет текущую скорость. Оно имеет тип `String` (строка) и, если не задано явно, по умолчанию равно пустой строке `""`.
2. `val ping: String = "-"`: Это свойство `ping` представляет текущее значение пинга. Пинг - это время, которое требуется для передачи данных между устройством и сервером. По умолчанию это равно `"-"`, что может означать, что пинг ещё не измерен.
3. `val maxSpeed: String = "-"`: Это свойство `maxSpeed` представляет максимальную скорость. По умолчанию это равно `"-"`, что может означать, что максимальная скорость ещё не измерена.
4. `val arcValue: Float = 0f`: Это свойство `arcValue` представляет числовое значение в виде десятичной дроби (с плавающей точкой). По умолчанию это равно `0f`.
5. `val inProgress: Boolean = false`: Это свойство `inProgress` представляет флаг, указывающий, идёт ли какой-то процесс в данный момент. Если `true`, то что-то происходит. По умолчанию это `false`, что означает, что никакой процесс не идёт.
Этот класс `UiState` предназначен для хранения информации о текущем состоянии какого-то процесса, связанного с измерением скорости. Например, если вы создаёте приложение для тестирования интернет-скорости, то этот класс может содержать информацию о текущей скорости, пинге, максимальной скорости и т.д.
 */